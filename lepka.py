import telebot
from telebot import types

# –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –Ω–∏–∂–µ
API_TOKEN = 'API_TOKEN/'
ADMIN_CHAT_ID = 'ADMIN_CHAT_ID'

bot = telebot.TeleBot(API_TOKEN)

user_data = {}  # –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    # –ï—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
    if str(chat_id) == ADMIN_CHAT_ID:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        notify_button = types.KeyboardButton("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
        markup.add(notify_button)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        return
    user_data[chat_id] = {}  # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(chat_id, "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
    bot.register_next_step_handler(message, get_name)

def get_name(message):
    chat_id = message.chat.id
    user_data[chat_id]['name'] = message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(chat_id, "üìû –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
    bot.register_next_step_handler(message, get_phone)

def get_phone(message):
    chat_id = message.chat.id
    phone_number = message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if not phone_number.isdigit() or len(phone_number) != 11:
        bot.send_message(chat_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ 11 —Ü–∏—Ñ—Ä.")
        bot.register_next_step_handler(message, get_phone)
        return

    user_data[chat_id]['phone'] = phone_number  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(chat_id, "üì∏–¢–µ–ø–µ—Ä—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ —Å–≤–æ–µ–≥–æ –∏–∑–¥–µ–ª–∏—è. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –Ω–∞–∂–º–∏—Ç–µ –ó–∞–≤–µ—Ä—à–∏—Ç—å.",
                     reply_markup=generate_finish_button())
    bot.register_next_step_handler(message, get_photos)

def get_photos(message):
    chat_id = message.chat.id
    if message.content_type == 'photo':
        if 'photos' not in user_data[chat_id]:
            user_data[chat_id]['photos'] = []  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        user_data[chat_id]['photos'].append(message.photo[-1].file_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª ID —Ñ–æ—Ç–æ
        bot.send_message(chat_id, "‚úÖ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω–æ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –ó–∞–≤–µ—Ä—à–∏—Ç—å, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å.",
                         reply_markup=generate_finish_button())  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å"
        bot.register_next_step_handler(message, get_photos)
    elif message.text.lower() == "–∑–∞–≤–µ—Ä—à–∏—Ç—å":
        send_data_to_admin(chat_id)
    else:
        bot.send_message(chat_id, "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ.")
        bot.register_next_step_handler(message, get_photos)

def generate_finish_button():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    finish_button = types.KeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å")
    markup.add(finish_button)
    return markup

def send_data_to_admin(chat_id):
    if chat_id in user_data:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        info_message = (f"üìù –ò–º—è: {user_data[chat_id]['name']}\n"
                        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data[chat_id]['phone']}\n"
                        f"üÜî Chat ID: {chat_id}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        if 'photos' in user_data[chat_id]:
            media = [types.InputMediaPhoto(photo_id) for photo_id in user_data[chat_id]['photos']]
            if media:
                media[0].caption = info_message  # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ø–æ–¥–ø–∏—Å—å –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                bot.send_media_group(ADMIN_CHAT_ID, media)
            else:
                bot.send_message(ADMIN_CHAT_ID, info_message)
        else:
            bot.send_message(ADMIN_CHAT_ID, info_message)

        bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ‚ù§Ô∏è –í–∞—à–µ –∏–∑–¥–µ–ª–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ!–ö–æ–≥–¥–∞ –∏–∑–¥–µ–ª–∏–µ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ –≤–∞–º –ø—Ä–∏–¥–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç‚ú®")
        bot.send_message(chat_id, "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –¥–æ–º–æ–π –∏ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—á–Ω—ë—Ç—Å—è –∑–∞–Ω–æ–≤–æ üè†", reply_markup=generate_home_button())  # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–î–æ–º–æ–π"
        del user_data[chat_id]  # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    else:
        bot.send_message(chat_id, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start.")

def generate_home_button():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    home_button = types.KeyboardButton("üè† –î–æ–º–æ–π")
    markup.add(home_button)
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.message_handler(func=lambda message: message.text.lower() == "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
def notify_user(message):
    chat_id = message.chat.id
    if str(chat_id) == ADMIN_CHAT_ID:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:")
        bot.register_next_step_handler(message, process_notify_id)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        notify_button = types.KeyboardButton("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
        markup.add(notify_button)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

def process_notify_id(message):
    try:
        chat_id = int(message.text)
        notification = "–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –í–∞–º —É–¥–æ–±–Ω–æ –µ–≥–æ –∑–∞–±—Ä–∞—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ @my_namin"
        bot.send_message(chat_id, f"–í–∞—à–µ –∏–∑–¥–µ–ª–∏–µ –≥–æ—Ç–æ–≤–æ. {notification}")
        bot.send_message(message.chat.id, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–º–æ–π"
@bot.message_handler(func=lambda message: message.text.lower() == "üè† –¥–æ–º–æ–π")
def go_home(message):
    send_welcome(message)  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)